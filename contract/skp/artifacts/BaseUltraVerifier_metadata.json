{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "INVALID_VERIFICATION_KEY",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "MOD_EXP_FAILURE",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OPENING_COMMITMENT_FAILED",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PAIRING_FAILED",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PAIRING_PREAMBLE_FAILED",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "POINT_NOT_ON_CURVE",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "expected",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "actual",
						"type": "uint256"
					}
				],
				"name": "PUBLIC_INPUT_COUNT_INVALID",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PUBLIC_INPUT_GE_P",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PUBLIC_INPUT_INVALID_BN128_G1_POINT",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "getVerificationKeyHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_proof",
						"type": "bytes"
					},
					{
						"internalType": "bytes32[]",
						"name": "_publicInputs",
						"type": "bytes32[]"
					}
				],
				"name": "verify",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Top level Plonk proof verification contract, which allows Plonk proof to be verified",
			"kind": "dev",
			"methods": {
				"verify(bytes,bytes32[])": {
					"params": {
						"_proof": "- The serialized proof",
						"_publicInputs": "- An array of the public inputs"
					},
					"returns": {
						"_0": "True if proof is valid, reverts otherwise"
					}
				}
			},
			"title": "Ultra Plonk proof verification contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"verify(bytes,bytes32[])": {
					"notice": "Verify a Ultra Plonk proof"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"git_repositories/noir/skp/contract/skp/plonk_vk.sol": "BaseUltraVerifier"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 2000
		},
		"remappings": []
	},
	"sources": {
		"git_repositories/noir/skp/contract/skp/plonk_vk.sol": {
			"keccak256": "0xc66829b67dbd9e8144d68de8bd883f0ddac646faa4a0f42166e0d1ee174c789a",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://5d6f775dc54214a07a8b49534e5577f07c3cbd963a94c0a31a02e1821fd2e93d",
				"dweb:/ipfs/Qmc6wejULfoX5QCvCDzX1fbkFHma6YeyVXuS8DU5LBcSWy"
			]
		}
	},
	"version": 1
}